<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://www.highlevelbits.com/</id>
  <title>rss feed</title>
  <updated>2014-04-14T22:00:00Z</updated>
  <link rel="alternate" href="http://www.highlevelbits.com/"/>
  <link rel="self" href="http://www.highlevelbits.com/rss.xml"/>
  <author>
    <name>Fredrik &amp; Hardy</name>
    <uri>http://www.highlevelbits.com</uri>
  </author>
  <entry>
    <id>tag:www.highlevelbits.com,2014-04-15:/2014/04/crashplan-on-raspberry-pi-and-wd-mycloud.html</id>
    <title type="html">Building my own backup solution</title>
    <published>2014-04-14T22:00:00Z</published>
    <updated>2014-04-14T22:00:00Z</updated>
    <link rel="alternate" href="http://www.highlevelbits.com/2014/04/crashplan-on-raspberry-pi-and-wd-mycloud.html"/>
<<<<<<< HEAD
    <content type="html">&lt;h3 id="background"&gt;Background&lt;/h3&gt;
=======
    <content type="html">&lt;h2 id="background"&gt;Background&lt;/h2&gt;
>>>>>>> f61e86c987814382b7599e91a4d1d1a0b7c75d50

&lt;p&gt;Not so long ago I witnessed complete disk crashes by some of my
 colleagues. Everything was lost and a full reinstall was at order.
Ironically, one of my colleagues was even running a backup software,
but it was so out of date, that once he had an updated version of the
OS installed, he could not find and install a suitable version of the
backup software to restore lost data.&lt;/p&gt;

&lt;p&gt;Initially I smiled, but then I realized that I was in danger as well.
These guys where not technology savvy, but for me working with data
is my daily bread. Still, my disaster backup solution sucked, not to
say was non existent.&lt;/p&gt;

&lt;p&gt;All I had was a USB drive attached to a
&lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; available as Samba drive
on my network.&lt;/p&gt;

&lt;h2 id="crashplan"&gt;CrashPlan&lt;/h2&gt;

&lt;p&gt;As a first step I investigated cloud based backup services. I was
hoping that this could easily be setup without any new hardware. Of course having the backup off-site, sounded like a good idea as well. I
investigated several services and the choice is for sure huge our-days.
To get started start with one of comparisons sites out there (like
&lt;a href="http://www.top10cloudstorage.com/review/justcloud/"&gt;this one&lt;/a&gt;).
They offer a good starting point, but if course their rankings have
to be taken with a grain of salt.&lt;/p&gt;

&lt;p&gt;Another thing I noticed - it seems quite custom for these cloud
backup providers to hide their pricing information. Sometimes you have to click around for ages to find it, but other
times I was just unable to find any at all. Take
&lt;a href="http://www.justcloud.com/"&gt;justcloud.com&lt;/a&gt; for example. Where the
heck is the pricing information? To me that’s already a no go zone,
even if the service is good.&lt;/p&gt;

&lt;p&gt;Anyways, I ended up with &lt;a href="http://www.code42.com/crashplan/"&gt;CrashPlan&lt;/a&gt;. Not because I think it is the best service, but more because it offered feature wise the minimum I expected for a reasonable price.&lt;/p&gt;

&lt;p&gt;The strong points for me were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Price - 4 USD / month, if bound for 4 years&lt;/li&gt;
  &lt;li&gt;Unlimited data - that was one of the determining features&lt;/li&gt;
  &lt;li&gt;Free friend to friend backup - a very nice feature which comes in
handy as we’ll &lt;a href="#friend-to-friend"&gt;see later&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On the weak side:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Very basic Web UI which just allows you do download backed up
files. I was hoping for some more features, for example the ability to view and organize pictures on-line.&lt;/li&gt;
  &lt;li&gt;The client to configure the backup is Java based and needs to run as a GUI&lt;/li&gt;
  &lt;li&gt;Upload speed is not very high. My initial upload (~110 GB) took me
several weeks. The problem might be data
center location related or a
&lt;a href="http://networkrockstar.ca/2013/09/speeding-up-crashplan-backups/"&gt;problem of the software&lt;/a&gt;.
The verdict is still out on this one.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="crashplan-on-raspberry-pi"&gt;CrashPlan on Raspberry Pi&lt;/h2&gt;

&lt;p&gt;Once I decided to use Crashplan it was at the time to install it on
my PI. For evaluation purposes I first installed CrashPlan on my
notebook, but in the long run my plan had always been to run Crashplan on the Pi.
Unfortunately, there is where the pain begun. Basically there three
hurdles you have to jump prior to running CrashPlan on a Pi:&lt;/p&gt;

&lt;p&gt;&lt;a name="arm-install"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="#install-java"&gt;Install Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#install-crashplan"&gt;Install and &lt;em&gt;patch&lt;/em&gt; Crashplan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#headless-client"&gt;Configure CrashPlan to run on a headless client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s address these things, in this order.&lt;/p&gt;

<<<<<<< HEAD
&lt;p&gt;&lt;a name="install-java"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="install-java"&gt;Install Java&lt;/h3&gt;
=======
&lt;p&gt;&lt;a name="install-java"&gt;&lt;/a&gt;
### Install Java&lt;/p&gt;
>>>>>>> f61e86c987814382b7599e91a4d1d1a0b7c75d50

&lt;p&gt;Installing Java via the package manager is actually quite easy. You need some other libraries as well, but that’s not hard.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install openjdk-7-jre-headless build-essential libjna-java
&lt;/code&gt;&lt;/pre&gt;

<<<<<<< HEAD
&lt;p&gt;&lt;a name="install-crashplan"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="install-and-patch-crashplan"&gt;Install and patch CrashPlan&lt;/h3&gt;
=======
&lt;p&gt;&lt;a name="install-crashplan"&gt;&lt;/a&gt;
### Install and patch CrashPlan&lt;/p&gt;
>>>>>>> f61e86c987814382b7599e91a4d1d1a0b7c75d50

&lt;p&gt;Now that you have Java installed it is time to download and install the
CrashPlan installer (check the website for the latest version):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; curl -O http://download.crashplan.com/installs/linux/install/CrashPlan/CrashPlan_3.6.3_Linux.tgz
&amp;gt; tar -zxvf CrashPlan_3.6.3_Linux.tgz
&amp;gt; cd CrashPlan-install
&amp;gt; sudo ./install.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can choose the default installation options which will install
CrashPlan into &lt;em&gt;/usr/local/crashplan&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now it at the time to patch
the installation. The library &lt;em&gt;libjtux.so&lt;/em&gt;, which get extracted
into the installation directory does not work on
&lt;a href="http://en.wikipedia.org/wiki/ARM_architecture"&gt;ARM processors&lt;/a&gt;. You
will need to replace it with an ARM compatible version. You can try
to compile a patched
&lt;a href="http://www.basepath.com/aup/jtux"&gt;Jtux&lt;/a&gt; yourself as suggested
&lt;a href="https://0x539.se/crashplan-pa-din-raspberry-pi"&gt;here&lt;/a&gt; or you can downloaded the pre-compiled binary from &lt;a href="http://goo.gl/kYqCLD"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /usr/local/crashplan
$ mv libjtux.so libjtux.so.orig
$ cp &amp;lt;download-dir&amp;gt;/libjtux.so .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you are ready to run CrashPlan on your Pi.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $ sudo service crashplan start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first startup takes a long time, so be patient. You can check
whether the process is running via:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo service crashplan status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or if you want more details check the &lt;em&gt;/usr/local/crashplan/log&lt;/em&gt;
directory which contains multiple log files.&lt;/p&gt;

<<<<<<< HEAD
&lt;p&gt;&lt;a name="headless-client"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="run-crashplan-on-a-headless-client"&gt;Run CrashPlan on a headless client&lt;/h3&gt;
=======
&lt;p&gt;&lt;a name="headless-client"&gt;&lt;/a&gt;
### Run CrashPlan on a headless client&lt;/p&gt;
>>>>>>> f61e86c987814382b7599e91a4d1d1a0b7c75d50

&lt;p&gt;Now that CrashPlan is running you need to configure it and setup the
backup sets. Provided your Pi runs headless (as in my case,)
you will have to solve now the last piece of the puzzle. Setting
up configuration via a headless client. To do so, you will have to
install CrashPlan on your computer as well and then follow the
instructions provided from the CrashPlan support pages on how to
&lt;a href="http://support.code42.com/CrashPlan/Latest/Configuring/Configuring_A_Headless_Client"&gt;Configuring a Headless Client&lt;/a&gt;.
Basically this is done via SSH tunneling and looks something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; ssh -L 4200:localhost:4243 pi@my.pi.ip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(Don’t forget to update the &lt;em&gt;ui.properties&lt;/em&gt; file as explained on
the help page).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;If you are like me and cannot remember all these options, add the
following to your &lt;em&gt;~/.ssh/config&lt;/em&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host pi
    HostName &amp;lt;my.pi.ip&amp;gt;
    User pi
    IdentityFile ~/.ssh/id_rsa.pub
    LocalForward 4200 127.0.0.1:4243
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="crashplan-on-wd-my-cloud"&gt;Crashplan on WD My Cloud&lt;/h2&gt;

<<<<<<< HEAD
&lt;p&gt;&lt;a name="friend-to-friend"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="friend-to-friend-backup"&gt;Friend to friend backup&lt;/h3&gt;
=======
&lt;p&gt;&lt;a name="friend-to-friend"&gt;&lt;/a&gt;
### Friend to friend backup&lt;/p&gt;
>>>>>>> f61e86c987814382b7599e91a4d1d1a0b7c75d50

&lt;p&gt;So, now I had a a backup on my USB disc attached to the PI and a
remote backup on the CrashPlan servers. But why stop there? It happened
that I also bought a &lt;a href="http://www.wdc.com/en/products/products.aspx?id=1140"&gt;WD My Cloud&lt;/a&gt;
for my office. Given that it is running Linux and you can get root
access, it was not so far fetched to utilize it for CrashPlan as well.
CrashPlan allows friends to share their backup storage with each other
and the beauty is that this feature is free. All you have to do is to
sign up for another free CrashPlan account and use it to share you
backup device. How this works
in detail is described on the CrashPlan support site - &lt;a href="https://support.code42.com/CrashPlan/Latest/Backup/Backing_Up_To_A_Friends_Computer"&gt;Backing Up To A Friends Computer&lt;/a&gt;.&lt;/p&gt;

<<<<<<< HEAD
&lt;h3 id="install-and-patch-crashplan-1"&gt;Install and patch CrashPlan&lt;/h3&gt;
=======
&lt;h3 id="install-and-patch-crashplan"&gt;Install and patch CrashPlan&lt;/h3&gt;
>>>>>>> f61e86c987814382b7599e91a4d1d1a0b7c75d50

&lt;p&gt;However, to use friend to friend backup, I needed to install first
CrashPlan on the WD My Cloud. Luckily it is also an ARM based
processor, so the steps for installing CrashPlan are identical to
installing on the Pi. So back to &lt;a href="#arm-install"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="monit"&gt;Monit&lt;/h3&gt;

&lt;p&gt;Almost there. A last thing I did was to installed
&lt;a href="http://mmonit.com/monit/"&gt;Monit&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; apt-get install monit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The reason for installing it was
that I had several JRE crashes with CrashPlan not restarting. Adding
Monit with the following configuration (under &lt;em&gt;/etc/monit/conf.d/crashplan&lt;/em&gt;)
fixed that problem. The crashes
still occur, but don’t bother me too much at the moment:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;check process chrashplan with pidfile /usr/local/crashplan/CrashPlanEngine.pid
 start program = "/etc/init.d/crashplan start"
 stop  program = "/etc/init.d/crashplan stop"
 if 5 restarts within 5 cycles then timeout
&lt;/code&gt;&lt;/pre&gt;

<<<<<<< HEAD
&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
=======
&lt;h3 id="summary"&gt;Summary&lt;/h3&gt;
>>>>>>> f61e86c987814382b7599e91a4d1d1a0b7c75d50

&lt;p&gt;Overall I am happy with my new backup solution. From local USB
only, to two off-site backups, all fully automated, that’s not too bad.
Price-wise I am also happy. For 4 USD per month, I get a unlimited
off-site storage at one of CrashPlan’s servers, plus a free friend to
friend backup using the same technology and configuration.&lt;/p&gt;

&lt;p&gt;I am still disappointed on what I can do with my backup data. I would
expect more from the CrashPlan web and tablet apps.&lt;/p&gt;

&lt;p&gt;The biggest disappointment, however, is the Java client. It feels to
bulky and not flexible to fire up an UI to manage and configure
you backups. Maybe for recovery, but for simple configuration a
command line tool would be of great help. Maybe just as a supplementary
tool. On top of this, I need to keep CrashPlan around on my notebook,
just for running the GUI connecting to my PI.
That would be “ok”, if I could just
use the GUI, but the installation of CrashPlan also installs some
services which I have not been able to turn off yet. Last, but not
least, the use of something like &lt;em&gt;libjtux&lt;/em&gt; is imo questionable. It’s
poor to include something into your Linux distribution package which does then not even run on all installations. This whole fiddling with
the Java GUI became almost a deal breaker for me, but since I worked
it out in the end I’ll stick to it for now. I would love
ChrashPlan to work on this part.&lt;/p&gt;

&lt;p&gt;I hope this helps a few people trying to get CrashPlan to work on a
Raspberry Pi or a WD My Cloud. If you have problems with the
instructions or find other problems with my solution, leave a message.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.highlevelbits.com,2014-03-30:/2014/03/current-state-of-virtual-reality.html</id>
    <title type="html">current state of virtual reality</title>
    <published>2014-03-30T07:00:00Z</published>
    <updated>2014-03-30T07:00:00Z</updated>
    <link rel="alternate" href="http://www.highlevelbits.com/2014/03/current-state-of-virtual-reality.html"/>
    <content type="html">&lt;p&gt;As our loyal readers surely remembers we have touched upon the subject of virtual reality and alternative input devices before. This was a common theme in the first year of this web log. Back in february 2007 when we launched I posted &lt;a href="/2007/02/whats-that-noise-about-second-life.html"&gt;&lt;em&gt;Whats that noise about Second Life?&lt;/em&gt;&lt;/a&gt; with this analysis:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I am pretty sure that this is overhyped now but in a distant future something like this will be the way to surf just 
like cyberpunk prophet William Gibson predicted 23 years ago in the excellent novel Neuromancer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;7 years later and it has not come true. Yet. I haven’t really followed the area lately so when the news of Facebook buying &lt;a href="http://www.oculusvr.com/"&gt;Oculus VR&lt;/a&gt; (along with Sony releasing a similar device) appeared on my radar I thought it fun to explore a bit more. Apparently indie game superstars Mojang &lt;a href="http://notch.net/2014/03/virtual-reality-is-going-to-change-the-world/"&gt;were in talks with Oculus to launch minecraft&lt;/a&gt; into their virtual environment. It seems like these talks were in an early phase and naturally notch et al did not like the idea of talking with facebook instead and ended to collaboration efforts right away. That is sad because getting minecraft into a VR platform would certainly kick start things right away. On the other hand - facebook clearly see the technology as mature enough to bet on and that may be a good sign for virtual reality overall. &lt;/p&gt;

&lt;p&gt;&lt;img src="https://farm6.staticflickr.com/5536/10187117474_ee7e0e8bbd_c.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;The guy above is trying out the Oculus Rift. Isn’t it still a bit big? I get steampunkish feelings! Something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://farm5.staticflickr.com/4154/4989019868_d23e79b65c_z.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Oculus was &lt;a href="https://www.kickstarter.com/"&gt;kickstarted&lt;/a&gt; into existance. Some of its backers may feel a bit disillusioned after the facebook acquisition as &lt;a href="https://twitter.com/avestal"&gt;Andrew Vestal&lt;/a&gt; summed up over on twitter:&lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p&gt;&amp;quot;I Kickstarted the Oculus Rift, what do I get?&amp;quot; You get a lesson in how capitalism works.&lt;/p&gt;&amp;mdash; Andrew Vestal (@avestal) &lt;a href="https://twitter.com/avestal/statuses/448603100387872768"&gt;March 25, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;Not unsurprisingly Sony is on the move and unveiled Morpheus at GDC just some weeks ago. It looks slicker (as you would expect) but is basically the same deal conceptually and technically. While it is now possible to get virtual reality visuals there is still lots of work to be done when it comes to interacting with this world. Most of the examples I have seen in my short googling session involves either a classic console controller or some kind of wii-like pointer thing.&lt;/p&gt;

&lt;p&gt;Another fun post to reread 7 years later is &lt;a href="/2007/04/gartner-on-virtual-worlds.html"&gt;&lt;em&gt;Gartner on virtual worlds&lt;/em&gt;&lt;/a&gt; where I bashed a ridiculous prophecy by gartner that by 2011 80% of internet users will have a second life in one of the emerging virtual reality platforms. That didn’t come true - not because it is a bad idea but because interface technologies weren’t mature enough for it. the average user is not impressed by a virtual world accessed via the standard keyboard/mouse/screen peripherals. New ways to interact with computer and cloud is a must to get somewhere when it comes to virtual reality. Also important is the killer application that makes us all want to get inside. I doubt that it will be facebook that delivers this killer application but you never know. Given their huge user base anything can happen. And we will surely continue the &lt;a href="/2013/08/freedom.html"&gt;miserable path of proprietary protocols&lt;/a&gt; for human interaction.&lt;/p&gt;

&lt;p&gt;I leave you with this good overview of the current state of affairs compiled by the verge:&lt;/p&gt;

&lt;iframe width="560" height="315" src="//www.youtube.com/embed/ZZDizTLX3Rc" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.highlevelbits.com,2014-03-05:/2014/03/back-in-javaland.html</id>
    <title type="html">Back in Javaland</title>
    <published>2014-03-05T07:00:00Z</published>
    <updated>2014-03-05T07:00:00Z</updated>
    <link rel="alternate" href="http://www.highlevelbits.com/2014/03/back-in-javaland.html"/>
    <content type="html">&lt;p&gt;So I am currently back coding Java. It is two months into the current assignment and about time to report some findings. The product I work on (yes - a real product that is &lt;strong&gt;released&lt;/strong&gt;) is a desktop application written with &lt;a href="https://en.wikipedia.org/wiki/Swing_%28Java%29"&gt;Swing&lt;/a&gt; - this GUI framework of Java that seems to be almost abandoned. But it is the choice you have when doing desktop with Java. (I have no idea whethere this is better or worse with other languages. Probably not for cross platform stuff. This &lt;a href="http://qt-project.org/"&gt;qt&lt;/a&gt; thing might be a contender though.) It sure is possible to do good stuff with it. In this code base I have mostly been saved from interacting directly with Swing due to several abstractions (of varying quality) built on top of it. Some things have been really nice to use. Adding another menu item is done in no time at all. Sometimes it goes in the way. We tried to remove a tab from an editor window and it wasn’t possible to even understand how to do it in a couple of hours. The code base is a bit old but still remarkable stable despite a clear lack of automated tests. (Yes - we are increasing the numbers.) So that is a little background to what I am doing at the moment. A couple of reflections on this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Java is the language I know best and it is really easy to just get going with it despite not having coding it for more than a year. Some skills seem to stick.&lt;/li&gt;
  &lt;li&gt;inheritance sucks.&lt;/li&gt;
  &lt;li&gt;interfaces may be handy if you use them consistently.&lt;/li&gt;
  &lt;li&gt;the lack of enforced dependencies between packages in Java makes any code base a big soap.&lt;/li&gt;
  &lt;li&gt;abstractions may make you go faster once you understand them.&lt;/li&gt;
  &lt;li&gt;testing is hard. We tried to use &lt;a href="https://code.google.com/p/fest/"&gt;Fest&lt;/a&gt; underneath the &lt;a href="https://github.com/cucumber/cucumber-jvm"&gt;JVM flavour of Cucumber&lt;/a&gt;. It looked promising but than we got weird problems with running tests on the build server so we abandoned it for a while in favor of automated tests under the hood instead. &lt;/li&gt;
  &lt;li&gt;the current code base is entangled so we always need to do a fair bit of mocking when setting up a test.&lt;/li&gt;
  &lt;li&gt;since most of the code is uncovered by test we try to write unit tests for bigger units then classes so we cover as much as ground as possible with a single test. This has been working really fine. It is important to put the mocks in the right place for an interaction under test. &lt;/li&gt;
  &lt;li&gt;in a statically typed, compiled language even a system that has too few tests can have a some stability.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will stay in Javaland for another 2 months. It is nicer than I expected. &lt;/p&gt;

&lt;p&gt;I also found out that there is a &lt;a href="http://www.javaland.eu/en/javaland-2014.html"&gt;german conference&lt;/a&gt; called Javaland. Not for me but in case you want to go I give you a nice banner.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.javaland.eu/typo3temp/pics/8e30c2bb4b.jpg" alt="" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.highlevelbits.com,2014-02-16:/2014/02/using-redis-as-cache-with-ruby.html</id>
    <title type="html">Using redis as a cache with Ruby</title>
    <published>2014-02-16T07:00:00Z</published>
    <updated>2014-02-16T07:00:00Z</updated>
    <link rel="alternate" href="http://www.highlevelbits.com/2014/02/using-redis-as-cache-with-ruby.html"/>
    <content type="html">&lt;p&gt;For one sinatra based web site I am messing with I needed a cache for calls to third party APIs. I had used &lt;a href="http://redis.io/"&gt;redis&lt;/a&gt; before together with &lt;a href="http://resquework.org/"&gt;resque&lt;/a&gt; at a client gig so it was a natural choice for this task. Essentially I needed to use URLs as keys and the returned content for that URL as the value.&lt;/p&gt;

&lt;p&gt;Installing redis is easy on arch: &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -S redis 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It hooks in nicely with &lt;code&gt;systemctl&lt;/code&gt; so you can &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl start redis
systemctl enable redis 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to have it up and running after reboots.&lt;/p&gt;

&lt;p&gt;For integrating with Ruby there is a nice gem called &lt;code&gt;redis&lt;/code&gt;. Install it with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install redis
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or put it in your Gemfile for use with bundler.&lt;/p&gt;

&lt;p&gt;Now we are ready to start using &lt;code&gt;redis&lt;/code&gt;. My use case is the simplest possible with strings for both keys and values. To start interacting with redis you need a client instance:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;redis = Redis.new host: '127.0.0.1'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates a client with all the defaults trying to connect with redis on the default port &lt;code&gt;6379&lt;/code&gt;. On my server I have a restrictive firewall running so I had to specify talking to an IP address rather than the default &lt;code&gt;localhost&lt;/code&gt;. It is also possible to start redis listening to a socket instead of a port. This may be a bit faster.&lt;/p&gt;

&lt;p&gt;Now we can put some stuff into the database:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;redis.set 'some_random_key', 'value'
redis.expire 'some_random_key', 60 * 60 * 24
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If I want to save the value forever only the first line is needed. But since this is a cache I had to add the second line to get a 24 hour expiry time on the item.&lt;/p&gt;

&lt;p&gt;Now the key will be available for 24 hours and the be removed. To retrieve the value is just as easy:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;redis.get 'some_random_key'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I coded this up on the commute to work one day and installed it on the server the next. Really easy and useful. I certainly will consider redis as a database candidate for real work in the future. Using it as a cache is nice but it seems capable of being you main persistance store if you are into NoSQL stuff.&lt;/p&gt;

&lt;p&gt;Also - it is really fast.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.highlevelbits.com,2014-01-02:/2014/01/notes-on-my-nexus-5.html</id>
    <title type="html">Notes on my Nexus 5</title>
    <published>2014-01-02T07:00:00Z</published>
    <updated>2014-01-02T07:00:00Z</updated>
    <link rel="alternate" href="http://www.highlevelbits.com/2014/01/notes-on-my-nexus-5.html"/>
    <content type="html">&lt;p&gt;I got myself a &lt;strong&gt;Nexus 5&lt;/strong&gt; just before christmas. It was about time to replace me Nexus S - a phone that I have been happy with and not really saw a reason to switch out. Since there is no truly open choice when it comes to mobiles (not one that seems to also work….) I decided to continue with Nexus. This is my third. I also had a Nexus One before the S. I posted &lt;a href="http://highlevelbits.com/2010/03/notes-on-my-nexus-one.html"&gt;some notes on the Nexus One&lt;/a&gt; back in january 2010. It was my first Android so there is a lot in there that may seem self evident nowadays. Still - it has only been 4 years… One wonders where mobiles will be in 2018? Now I will just stick to the differences between my previous two nexuses and this new one.&lt;/p&gt;

&lt;p&gt;It is &lt;strong&gt;big&lt;/strong&gt;. I can barely use it with one hand which kind of sucks. When holding it in one hand I can not reach the opposite upper corner with my thumb. It turns out that this is ok when using it with my left hand but in the right hand there are several apps that got a menu top left that is unreachable. Another effect of this is that you’ll have to place the desktop icons you actually use to the bottom of the screen.&lt;/p&gt;

&lt;p&gt;It is &lt;strong&gt;fast&lt;/strong&gt;. Everything is much faster. Browser, GPS, music streaming, app starting - it all is much faster.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;screen&lt;/strong&gt; is also big. This is the biggest advantage of the phone. It is actually meningful to watch video in this device. The resolution is good enough to make it a good alternative to the television set. When I lay down in my sofa and hold the phone in front of me it is the same &lt;em&gt;visual&lt;/em&gt; size as the television set. No difference there. The screen size also makes the device better for reading. This is mostly because you don’t need tyo scroll as often.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;battery&lt;/strong&gt; is internal which worried me a bit initially. I bought an extra battery for my Nexus S to make it possible to go on long geocaching trips. However the battery time of this phone is really good. I haven’t had one case of it running out yet despite doing many battery intensive things in a day.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;camera&lt;/strong&gt; is good and fast. I may actually start to use it. I did snap a lot with a Nokia I had way back but since then I haven’t had the inspiration - just the occasional ‘must take’ pic. I bring my &lt;em&gt;real&lt;/em&gt; camera whenever I want to take proper shots. It is a bit limiting to be sure so maybe that will change. The nice (if I may say so) &lt;a href="http://www.flickr.com/photos/froderik/11684236696/"&gt;photo below&lt;/a&gt; is taken with the camera on a walk yesterday.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://farm4.staticflickr.com/3801/11684236696_7a7a4c6121_b.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;As it should be - this is the best phone I have had.&lt;/p&gt;
</content>
  </entry>
</feed>
