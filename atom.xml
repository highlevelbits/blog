<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://www.highlevelbits.com/</id>
  <title>atom feed</title>
  <updated>2014-03-05T07:00:00Z</updated>
  <link rel="alternate" href="http://www.highlevelbits.com/"/>
  <link rel="self" href="http://www.highlevelbits.com/atom.xml"/>
  <author>
    <name>Fredrik &amp; Hardy</name>
    <uri>http://www.highlevelbits.com</uri>
  </author>
  <entry>
    <id>tag:www.highlevelbits.com,2014-03-05:/2014/03/back-in-javaland.html</id>
    <title type="html">Back in Javaland</title>
    <published>2014-03-05T07:00:00Z</published>
    <updated>2014-03-05T07:00:00Z</updated>
    <link rel="alternate" href="http://www.highlevelbits.com/2014/03/back-in-javaland.html"/>
    <content type="html">&lt;p&gt;So I am currently back coding Java. It is two months into the current assignment and about time to report some findings. The product I work on (yes - a real product that is &lt;strong&gt;released&lt;/strong&gt;) is a desktop application written with &lt;a href="https://en.wikipedia.org/wiki/Swing_%28Java%29"&gt;Swing&lt;/a&gt; - this GUI framework of Java that seems to be almost abandoned. But it is the choice you have when doing desktop with Java. (I have no idea whethere this is better or worse with other languages. Probably not for cross platform stuff. This &lt;a href="http://qt-project.org/"&gt;qt&lt;/a&gt; thing might be a contender though.) It sure is possible to do good stuff with it. In this code base I have mostly been saved from interacting directly with Swing due to several abstractions (of varying quality) built on top of it. Some things have been really nice to use. Adding another menu item is done in no time at all. Sometimes it goes in the way. We tried to remove a tab from an editor window and it wasn’t possible to even understand how to do it in a couple of hours. The code base is a bit old but still remarkable stable despite a clear lack of automated tests. (Yes - we are increasing the numbers.) So that is a little background to what I am doing at the moment. A couple of reflections on this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Java is the language I know best and it is really easy to just get going with it despite not having coding it for more than a year. Some skills seem to stick.&lt;/li&gt;
  &lt;li&gt;inheritance sucks.&lt;/li&gt;
  &lt;li&gt;interfaces may be handy if you use them consistently.&lt;/li&gt;
  &lt;li&gt;the lack of enforced dependencies between packages in Java makes any code base a big soap.&lt;/li&gt;
  &lt;li&gt;abstractions may make you go faster once you understand them.&lt;/li&gt;
  &lt;li&gt;testing is hard. We tried to use &lt;a href="https://code.google.com/p/fest/"&gt;Fest&lt;/a&gt; underneath the &lt;a href="https://github.com/cucumber/cucumber-jvm"&gt;JVM flavour of Cucumber&lt;/a&gt;. It looked promising but than we got weird problems with running tests on the build server so we abandoned it for a while in favor of automated tests under the hood instead. &lt;/li&gt;
  &lt;li&gt;the current code base is entangled so we always need to do a fair bit of mocking when setting up a test.&lt;/li&gt;
  &lt;li&gt;since most of the code is uncovered by test we try to write unit tests for bigger units then classes so we cover as much as ground as possible with a single test. This has been working really fine. It is important to put the mocks in the right place for an interaction under test. &lt;/li&gt;
  &lt;li&gt;in a statically typed, compiled language even a system that has too few tests can have a some stability.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will stay in Javaland for another 2 months. It is nicer than I expected. &lt;/p&gt;

&lt;p&gt;I also found out that there is a &lt;a href="http://www.javaland.eu/en/javaland-2014.html"&gt;german conference&lt;/a&gt; called Javaland. Not for me but in case you want to go I give you a nice banner.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.javaland.eu/typo3temp/pics/8e30c2bb4b.jpg" alt="" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.highlevelbits.com,2014-02-16:/2014/02/using-redis-as-cache-with-ruby.html</id>
    <title type="html">Using redis as a cache with Ruby</title>
    <published>2014-02-16T07:00:00Z</published>
    <updated>2014-02-16T07:00:00Z</updated>
    <link rel="alternate" href="http://www.highlevelbits.com/2014/02/using-redis-as-cache-with-ruby.html"/>
    <content type="html">&lt;p&gt;For one sinatra based web site I am messing with I needed a cache for calls to third party APIs. I had used &lt;a href="http://redis.io/"&gt;redis&lt;/a&gt; before together with &lt;a href="http://resquework.org/"&gt;resque&lt;/a&gt; at a client gig so it was a natural choice for this task. Essentially I needed to use URLs as keys and the returned content for that URL as the value.&lt;/p&gt;

&lt;p&gt;Installing redis is easy on arch: &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -S redis 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It hooks in nicely with &lt;code&gt;systemctl&lt;/code&gt; so you can &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl start redis
systemctl enable redis 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to have it up and running after reboots.&lt;/p&gt;

&lt;p&gt;For integrating with Ruby there is a nice gem called &lt;code&gt;redis&lt;/code&gt;. Install it with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install redis
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or put it in your Gemfile for use with bundler.&lt;/p&gt;

&lt;p&gt;Now we are ready to start using &lt;code&gt;redis&lt;/code&gt;. My use case is the simplest possible with strings for both keys and values. To start interacting with redis you need a client instance:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;redis = Redis.new host: '127.0.0.1'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates a client with all the defaults trying to connect with redis on the default port &lt;code&gt;6379&lt;/code&gt;. On my server I have a restrictive firewall running so I had to specify talking to an IP address rather than the default &lt;code&gt;localhost&lt;/code&gt;. It is also possible to start redis listening to a socket instead of a port. This may be a bit faster.&lt;/p&gt;

&lt;p&gt;Now we can put some stuff into the database:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;redis.set 'some_random_key', 'value'
redis.expire 'some_random_key', 60 * 60 * 24
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If I want to save the value forever only the first line is needed. But since this is a cache I had to add the second line to get a 24 hour expiry time on the item.&lt;/p&gt;

&lt;p&gt;Now the key will be available for 24 hours and the be removed. To retrieve the value is just as easy:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;redis.get 'some_random_key'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I coded this up on the commute to work one day and installed it on the server the next. Really easy and useful. I certainly will consider redis as a database candidate for real work in the future. Using it as a cache is nice but it seems capable of being you main persistance store if you are into NoSQL stuff.&lt;/p&gt;

&lt;p&gt;Also - it is really fast.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.highlevelbits.com,2014-01-02:/2014/01/notes-on-my-nexus-5.html</id>
    <title type="html">Notes on my Nexus 5</title>
    <published>2014-01-02T07:00:00Z</published>
    <updated>2014-01-02T07:00:00Z</updated>
    <link rel="alternate" href="http://www.highlevelbits.com/2014/01/notes-on-my-nexus-5.html"/>
    <content type="html">&lt;p&gt;I got myself a &lt;strong&gt;Nexus 5&lt;/strong&gt; just before christmas. It was about time to replace me Nexus S - a phone that I have been happy with and not really saw a reason to switch out. Since there is no truly open choice when it comes to mobiles (not one that seems to also work….) I decided to continue with Nexus. This is my third. I also had a Nexus One before the S. I posted &lt;a href="http://highlevelbits.com/2010/03/notes-on-my-nexus-one.html"&gt;some notes on the Nexus One&lt;/a&gt; back in january 2010. It was my first Android so there is a lot in there that may seem self evident nowadays. Still - it has only been 4 years… One wonders where mobiles will be in 2018? Now I will just stick to the differences between my previous two nexuses and this new one.&lt;/p&gt;

&lt;p&gt;It is &lt;strong&gt;big&lt;/strong&gt;. I can barely use it with one hand which kind of sucks. When holding it in one hand I can not reach the opposite upper corner with my thumb. It turns out that this is ok when using it with my left hand but in the right hand there are several apps that got a menu top left that is unreachable. Another effect of this is that you’ll have to place the desktop icons you actually use to the bottom of the screen.&lt;/p&gt;

&lt;p&gt;It is &lt;strong&gt;fast&lt;/strong&gt;. Everything is much faster. Browser, GPS, music streaming, app starting - it all is much faster.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;screen&lt;/strong&gt; is also big. This is the biggest advantage of the phone. It is actually meningful to watch video in this device. The resolution is good enough to make it a good alternative to the television set. When I lay down in my sofa and hold the phone in front of me it is the same &lt;em&gt;visual&lt;/em&gt; size as the television set. No difference there. The screen size also makes the device better for reading. This is mostly because you don’t need tyo scroll as often.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;battery&lt;/strong&gt; is internal which worried me a bit initially. I bought an extra battery for my Nexus S to make it possible to go on long geocaching trips. However the battery time of this phone is really good. I haven’t had one case of it running out yet despite doing many battery intensive things in a day.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;camera&lt;/strong&gt; is good and fast. I may actually start to use it. I did snap a lot with a Nokia I had way back but since then I haven’t had the inspiration - just the occasional ‘must take’ pic. I bring my &lt;em&gt;real&lt;/em&gt; camera whenever I want to take proper shots. It is a bit limiting to be sure so maybe that will change. The nice (if I may say so) &lt;a href="http://www.flickr.com/photos/froderik/11684236696/"&gt;photo below&lt;/a&gt; is taken with the camera on a walk yesterday.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://farm4.staticflickr.com/3801/11684236696_7a7a4c6121_b.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;As it should be - this is the best phone I have had.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.highlevelbits.com,2013-12-15:/2013/12/simple_backups.html</id>
    <title type="html">simple backups</title>
    <published>2013-12-15T21:01:00Z</published>
    <updated>2013-12-15T21:01:00Z</updated>
    <link rel="alternate" href="http://www.highlevelbits.com/2013/12/simple_backups.html"/>
    <content type="html">&lt;p&gt;&lt;img src="http://farm7.staticflickr.com/6054/6261970884_ea884ea79f_b.jpg" alt="backups" /&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href="http://www.flickr.com/photos/40133358@N05/6261970884"&gt;Photo by gagam13&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I just finished moving a rails thing from &lt;a href="https://heroku.com"&gt;heroku&lt;/a&gt; to my own &lt;a href="https://www.archlinux.org/"&gt;arch linux server&lt;/a&gt; at &lt;a href="https://www.digitalocean.com/"&gt;digital ocean&lt;/a&gt;. This has involved learning lots about server management. Setting up the server with decent security (ufw - uncomplicated firewall to the rescue) and a nginx web service talking to the unicorn-powered rails application. All rather easy and with lots of resources available on the interwebz. I didn’t find much about backing up a postgres database though so I figured something out on my own. And here it is! My requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nightly backups is enough (for now - users may lose latest updates)&lt;/li&gt;
  &lt;li&gt;backups must be stored on another server&lt;/li&gt;
  &lt;li&gt;backups on that other server should be encrypted&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This leaves me with 4 tasks:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;create a backup file&lt;/li&gt;
  &lt;li&gt;encrypt the backup file&lt;/li&gt;
  &lt;li&gt;upload the encrypted file to another server&lt;/li&gt;
  &lt;li&gt;schedule a nightly task to initiate the backup&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="create-a-backup-file"&gt;Create a backup file&lt;/h3&gt;

&lt;p&gt;Postgres comes with the easy to use &lt;code&gt;pg_dump&lt;/code&gt; command. Name your database and the file you want to export to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pg_dump -f &amp;lt;filename&amp;gt; &amp;lt;database&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to export all databases in your postgres server you can use the &lt;code&gt;pg_dumpall&lt;/code&gt; command instead and omit the database name. I created a filename with a timestamp so that there will be no file name conflict:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;date +%Y.%m.%d.%H.%M.%S
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;plus a suffix.&lt;/p&gt;

&lt;h3 id="encrypt-the-backup-file"&gt;Encrypt the backup file&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;gnupg&lt;/code&gt; provides with encryption. Easily installed with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -S gnupg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I settled for symmetric encryption with a hard password. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --symmetric --batch --passphrase &amp;lt;password&amp;gt; --force-mdc &amp;lt;backupfile&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;--symmetric&lt;/code&gt; flag says to encrypt symmetrically. This means that we can decrypt with the same password. &lt;code&gt;--batch&lt;/code&gt; makes it possible to pass in the passphrase on the command line rather than getting a prompt to enter it. &lt;code&gt;--force-mdc&lt;/code&gt; makes sure that a warning about mdc is avoided when decrypting. I am not sure what this means. The command creates a file in parallell to the backup file with the added &lt;code&gt;.gpg&lt;/code&gt; extension.&lt;/p&gt;

&lt;h3 id="upload-the-encrypted-file-to-another-server"&gt;Upload the encrypted file to another server&lt;/h3&gt;

&lt;p&gt;This can be done in many ways. I settled for dropbox mostly because it is free and rather easy to do. Even easier would be something like &lt;code&gt;sftp&lt;/code&gt; if you have the luxury of having another server for backup storing. To communicate with dropbox I use the &lt;a href="https://www.dropbox.com/developers/core"&gt;Core API&lt;/a&gt; with Ruby. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install dropbox-sdk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To use it you need to register an app with dropbox. Then you will get the key and secret needed to initiate communication and get an access token. To get the access token you will need to run the following once:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require 'dropbox_sdk'

flow = DropboxOAuth2FlowNoRedirect.new(APP_KEY, APP_SECRET)
url = flow.start
puts url
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go to the outputted url logged in as the user you want for dropbox and grab the code. Pass it in to the method below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;code = gets.strip
access_token, user_id = flow.finish code 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This access token can then be reused for all subsequent calls.&lt;/p&gt;

&lt;p&gt;Then do the actual file transfer with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;client = DropboxClient.new access_token
file = open gpgfilename
response = client.put_file(gpgfilename, file)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and the file ends up in the &lt;code&gt;Apps/&amp;lt;yourappname&amp;gt;&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;I use Ruby here but there are several other options depending on your setup.&lt;/p&gt;

&lt;h3 id="schedule-a-nightly-task"&gt;Schedule a nightly task&lt;/h3&gt;

&lt;p&gt;Finally I put all the above in to one huge ruby file (that I won’t share because it is kinda messy). Then I added it to crontab with &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export EDITOR=vim
crontab -e
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I always fail with vi…. The line to add for a nightly run at 01:37 is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;37 1 * * * /path/to/backup.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Keep in mind that cron executes with &lt;code&gt;/bin/sh&lt;/code&gt; so make sure to test your command under those circumstances. Cron is supposed to send mails when it fails. That remains to set up. I will probably rather hook the job up with nagios once I get that up and running for monitoring.&lt;/p&gt;

&lt;p&gt;Thats it for now. I will come back with more server side tips further on.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:www.highlevelbits.com,2013-12-05:/2013/12/arch.html</id>
    <title type="html">finally on linux</title>
    <published>2013-12-05T21:01:00Z</published>
    <updated>2013-12-05T21:01:00Z</updated>
    <link rel="alternate" href="http://www.highlevelbits.com/2013/12/arch.html"/>
    <content type="html">&lt;p&gt;&lt;a href="https://www.archlinux.org/" style="float:right"&gt;&lt;img src="https://d11xdyzr0div58.cloudfront.net/static/logos/archlinux-logo-dark-90dpi.ebdee92a15b3.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I have finally made the step from proprietary software to the free world of linux. I have had to use Windows for many years at several customers but started to used MacOS for my personal things some 6 or 7 years ago. 3 laptops later and it is time to switch again. A gig involving Java is coming up and my almost 3 years old Air is not up for it. Coding Rails and Go has been no problem at all but I fear Java will need some serious powers. So this time I decided to go Linux. The one thing that really made me decide was the NSA findings earlier this year. It is now obvious that closed software can not be trusted to uphold my personal integrity. And it is not that I care that much for my own integrity. I have nothing to hide. It is a matter of principals. Read more about this in my &lt;a href="/2013/08/freedom.html"&gt;freedom rant from august&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So Linux it is then but what kind. It seems like the most popular distros are bloated and may give an experience akin to Mac or Windows but I wanted something different and the simplest thing that can possible work. So I got my eyes on &lt;a href="https://www.archlinux.org/"&gt;Arch&lt;/a&gt;. Two fellow hackers, &lt;a href="https://twitter.com/dahankzter"&gt;Henrik Johansson&lt;/a&gt; and &lt;a href="https://twitter.com/jimlar"&gt;Jimmy Larsson&lt;/a&gt; were already on the distro and as I read up on it I decided that this is what I want to use. From &lt;a href="https://wiki.archlinux.org/index.php/The_Arch_Way"&gt;the arch way&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Arch Linux defines simplicity as without unnecessary additions, modifications, or complications, 
and provides a lightweight UNIX-like base structure that allows an individual user to shape the 
system according to their own needs. In short: an elegant, minimalist approach.&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;A lightweight base structure built with high programming standards will tend to have lower 
system resource demands. The base system is devoid of all clutter that may obscure important 
parts of the system, or make access to them difficult or convoluted. It has a streamlined set of 
succinctly commented, clean configuration files that are arranged for quick access and editing, 
with no cumbersome graphical configuration tools to hide possibilities from the user. An Arch 
Linux system is therefore readily configurable to the very last detail.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Complexity without complication.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I like it.&lt;/p&gt;

&lt;p&gt;So I decided on Arch before even buying a piece of hardware. After looking around for a while I settled for a &lt;a href="http://shop.lenovo.com/us/en/laptops/thinkpad/x-series/x230/"&gt;Lenovo ThinkPad X230&lt;/a&gt;. It is small though not as small as the Air. It got the powers and comes with a built-in 3G modem (that I actually got working!). It has a nice keyboard and a track pad that is ok but not as good as the Airs. Keyboard backlight that I finally found out that you can turn on with Fn-Space. (I accidentally lit it when missing a Ctrl-Space sequence trying to complete something in Sublime.)&lt;/p&gt;

&lt;p&gt;It is not easy to get started with Linux and Arch is probably even harder. I followed the noob guide to get disks formatted and the distro installed. It took me a couple of hours and I learned a lot. &lt;/p&gt;

&lt;p&gt;Then the tricky decision to decide to have a desktop or not. I decided to go simple and avoided KDE and Gnome in favour of a plain window manager - openbox. It does windows and not much more. And when you start using it you soon realize that you don’t really need anything more when you are literate on the comman line. At the moment I have a plain openbox configuration and I run stalonetray for network and battery icons. I also have conky running in default mode with plans to learn how to configure it sometime in the future.&lt;/p&gt;

&lt;p&gt;I still have some things to tweek. Stuff like pdf viewing, file extension management and printing has not been resolved yet. But I haven’t really tried. I will need to get used to replacements for a couple of programs, omnigraffle and iphoto being the most important ones probably. Apart from that it is mostly the same software here as on Apple. I tried with Firefox for a while but it turned out Chromium is better at making all web pages look good. It is likely a font issue with firefox (helvetica) but that is for some other rainy day. &lt;/p&gt;

&lt;p&gt;That’s it for now. I will likely be back with more detailed tales of the linux user.&lt;/p&gt;
</content>
  </entry>
</feed>
