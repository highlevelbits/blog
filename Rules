#!/usr/bin/env ruby
# coding: utf-8

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
  require 'set'
  
  tags = Set.new
  items.each do |item|
    if item[:tags]
      item[:tags].split(',').each do |t| 
        processed_tag = t.strip.downcase
        tags.add(processed_tag)
      end 
    end
  end

  tags.each do |tag|
    items.create("", { tag: tag, kind: 'tag' }, "/tags/#{tag.gsub(' ', '-')}")
  end    
end

compile '*' do
  if item.binary? or bypass? item[:extension]
  elsif item.identifier == '/atom/' or item.identifier == '/rss/' or item.identifier == '/feeds/posts/default/'
    filter :erb
  else
    case item[:extension]
    when 'html'
      filter :erb
    when 'md'
      filter :kramdown
    when 'haml'
      filter :haml
    end
    if item[:kind] =~ /(article|tag)/
      layout item[:kind]
    end
    layout 'default'
    filter( :relativize_paths, :type => :html )
  end
end

route '/atom/' do
  '/atom.xml'
end

route '/rss/' do
  '/rss.xml'
end

# backwards compatible RSS feed
route '/feeds/posts/default/' do
  '/feeds/posts/default'
end

route '/stylesheet/' do
  '/style.css'
end

route '/favicon/' do
  '/favicon.ico'
end

route '/' do
  '/index.html'
end

route '/tags/*' do
  "#{item.identifier}.html"
end

route '/*/' do
  extension = 'html'
  if item.binary? or  bypass? item[:extension]
    extension = item[:extension]
  end
  "#{item.identifier.chop}.#{extension}"
end

layout '*', :erb
